/**
 * nikto - Web server vulnerability scanner
 * Simulated command for the HackSimulator terminal
 * Educational tool demonstrating web vulnerability scanning
 */

export default {
  name: 'nikto',
  category: 'security',
  description: 'Web server vulnerability scanner',
  usage: 'nikto <url>',

  async execute(args, flags, context) {
    // Show warning on first use
    if (args.length === 0) {
      return `‚ö†Ô∏è  NIKTO - Web Server Scanner

‚ö†Ô∏è  JURIDISCHE WAARSCHUWING:
    Scannen van websites zonder toestemming is ILLEGAAL.
    Dit wordt gezien als unauthorized access attempt.

    Straf: Computercriminaliteit wet + mogelijke civiele claims.

üéØ EDUCATIEF GEBRUIK:
    Deze simulator demonstreert web vulnerability scanning veilig.

üí° GEBRUIK:
    nikto <url>

    Voorbeelden:
    ‚Ä¢ nikto http://testsite.local
    ‚Ä¢ nikto http://vulnerable-app.com
    ‚Ä¢ nikto http://demo.example.org

‚ùì DOORGAAN? [j/n]`;
    }

    const url = args[0];

    // Validate URL
    if (!url.startsWith('http://') && !url.startsWith('https://')) {
      return `nikto: invalid URL format

üí° TIP: URL moet http:// of https:// bevatten
        Bijvoorbeeld: nikto http://example.com`;
    }

    // Simulate nikto scan
    const hostname = url.replace(/^https?:\/\//, '').replace(/\/.*$/, '');

    const output = `- Nikto v2.5.0
---------------------------------------------------------------------------
+ Target IP:          192.168.1.100
+ Target Hostname:    ${hostname}
+ Target Port:        80
+ Start Time:         ${new Date().toLocaleString('nl-NL')}
---------------------------------------------------------------------------
+ Server: Apache/2.4.41 (Ubuntu)  ‚Üê Server fingerprinting
+ The anti-clickjacking X-Frame-Options header is not present  ‚Üê Security header missing
+ The X-Content-Type-Options header is not set  ‚Üê Security header missing
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ Apache/2.4.41 appears to be outdated (current is at least 2.4.54)  ‚Üê Oude versie
+ /admin/: Directory indexing enabled  ‚Üê Sensitive directory exposed
+ /backup/: Backup directory found  ‚Üê Mogelijk gevoelige bestanden
+ /config.php.bak: Configuration backup file found  ‚Üê Config backup (credentials?)
+ /phpinfo.php: PHP info page present  ‚Üê Info disclosure
+ /test.php: Test file found  ‚Üê Development file in productie
+ /.git/: Git repository found  ‚Üê Source code exposure!
+ /server-status: Apache server-status enabled  ‚Üê Server info disclosure

üîì GEVONDEN KWETSBAARHEDEN: 11

‚ö†Ô∏è  KRITIEKE BEVINDINGEN:

1. **Git Repository Exposed (/.git/)**
   Severity: HIGH
   Impact: Volledige source code kan gedownload worden
   ‚Üí Mogelijk credentials in code
   ‚Üí Mogelijke andere kwetsbaarheden in code

2. **Directory Indexing Enabled (/admin/)**
   Severity: MEDIUM
   Impact: Aanvaller kan alle bestanden in directory zien
   ‚Üí Gevoelige admin bestanden mogelijk toegankelijk

3. **Config Backup File (/config.php.bak)**
   Severity: HIGH
   Impact: Backup files bevatten vaak database credentials
   ‚Üí Direct database toegang mogelijk

4. **Outdated Apache Version**
   Severity: MEDIUM
   Impact: Bekende kwetsbaarheden in oude versies
   ‚Üí Mogelijk exploiteerbaar met Metasploit

5. **Security Headers Missing**
   Severity: LOW
   Impact: Verhoogd risico op XSS, clickjacking
   ‚Üí Makkelijkere client-side attacks

+ 11 vulnerabilities found
+ End Time: ${new Date().toLocaleString('nl-NL')} (scan took 32 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested

üí° LEERMOMENT: Web Security Headers

**Ontbrekende headers:**
   X-Frame-Options         ‚Üí Voorkomt clickjacking
   X-Content-Type-Options  ‚Üí Voorkomt MIME type sniffing
   Content-Security-Policy ‚Üí Voorkomt XSS attacks
   Strict-Transport-Security ‚Üí Forces HTTPS

üõ°Ô∏è  REMEDIATIE STAPPEN:

1. **Verwijder development files:**
   rm /var/www/html/phpinfo.php
   rm /var/www/html/test.php

2. **Block .git directory:**
   <Directory ".git">
       Require all denied
   </Directory>

3. **Disable directory indexing:**
   Options -Indexes

4. **Update Apache:**
   apt update && apt upgrade apache2

5. **Add security headers (Apache):**
   Header always set X-Frame-Options "DENY"
   Header always set X-Content-Type-Options "nosniff"
   Header always set Content-Security-Policy "default-src 'self'"

6. **Remove backup files:**
   find . -name "*.bak" -delete

‚ö†Ô∏è  PRIORITEIT: Fix HIGH severity issues eerst!`;

    return output;
  },

  manPage: `
NAAM
    nikto - Web server vulnerability scanner

SYNOPSIS
    nikto <URL>

BESCHRIJVING
    Nikto is een open source web server scanner die 6700+ potentieel
    gevaarlijke files/programs test, oude versies detecteert en
    server configuratie problemen vindt.

ARGUMENTEN
    URL
        Target website (http:// of https://)

VOORBEELDEN
    nikto http://example.com
        Scan website voor kwetsbaarheden

EDUCATIEVE CONTEXT
    üîç Wat scant Nikto?
       ‚Ä¢ Oude software versies (Apache, nginx, IIS)
       ‚Ä¢ Gevaarlijke files (phpinfo, test files, backups)
       ‚Ä¢ Server misconfiguratie (directory indexing)
       ‚Ä¢ Security headers (of gebrek daaraan)
       ‚Ä¢ Default files (admin panels, install scripts)
       ‚Ä¢ Bekende kwetsbaarheden (via database)

    üéØ Vulnerability types:
       ‚Ä¢ **Info disclosure**: phpinfo.php, .git/, server-status
       ‚Ä¢ **Outdated software**: Oude Apache/PHP met bekende CVEs
       ‚Ä¢ **Misconfigurations**: Directory indexing, backup files
       ‚Ä¢ **Missing security headers**: CSP, HSTS, X-Frame-Options
       ‚Ä¢ **Default installs**: Admin panels op default locations

COMMON FINDINGS
    üìÅ Development Files in Production:
       ‚Ä¢ phpinfo.php ‚Üí PHP configuration details
       ‚Ä¢ test.php ‚Üí Mogelijk SQL injection test code
       ‚Ä¢ debug.php ‚Üí Error messages, stack traces
       ‚Üí IMPACT: Information disclosure, mogelijk RCE

    üóÇÔ∏è  Backup Files:
       ‚Ä¢ config.php.bak ‚Üí Database credentials
       ‚Ä¢ .env.backup ‚Üí API keys, secrets
       ‚Ä¢ database.sql ‚Üí Volledige database dump
       ‚Üí IMPACT: Direct toegang tot credentials/data

    üìÇ Version Control Exposed:
       ‚Ä¢ .git/ ‚Üí Volledige source code + history
       ‚Ä¢ .svn/ ‚Üí Subversion repository
       ‚Ä¢ .DS_Store ‚Üí Mac OS metadata (directory listing)
       ‚Üí IMPACT: Source code theft, hardcoded secrets

    üîì Directory Indexing:
       ‚Ä¢ /uploads/ ‚Üí User uploaded files zichtbaar
       ‚Ä¢ /admin/ ‚Üí Admin panel files
       ‚Ä¢ /backup/ ‚Üí Backup files
       ‚Üí IMPACT: Sensitive data exposure

SECURITY HEADERS
    üõ°Ô∏è  Essenti√´le headers:

    **X-Frame-Options:**
       Voorkomt clickjacking (iframe embedding)
       Value: DENY of SAMEORIGIN

    **Content-Security-Policy (CSP):**
       Voorkomt XSS attacks
       Value: default-src 'self'; script-src 'self'

    **Strict-Transport-Security (HSTS):**
       Forceert HTTPS
       Value: max-age=31536000; includeSubDomains

    **X-Content-Type-Options:**
       Voorkomt MIME sniffing
       Value: nosniff

    **Referrer-Policy:**
       Controleert hoeveel referrer info verstuurd wordt
       Value: strict-origin-when-cross-origin

REAL-WORLD EXAMPLES
    üì∞ Git Repository Exposure:
       ‚Ä¢ Uber (2016): .git/ exposed in web root
       ‚Ä¢ Source code downloaded door security researcher
       ‚Ä¢ AWS credentials gevonden in code
       ‚Ä¢ $3 miljoen data breach resultaat

    üì∞ phpinfo() Exposure:
       ‚Ä¢ Talloze sites laten phpinfo.php online staan
       ‚Ä¢ Toont: File paths, extensions, environment vars
       ‚Ä¢ Helpt aanvaller met reconnaissance
       ‚Ä¢ Vaak eerste stap in attack chain

REMEDIATION
    üîß Quick fixes:

    **1. Remove dangerous files:**
       find /var/www -name "phpinfo.php" -delete
       find /var/www -name "test.php" -delete
       find /var/www -name "*.bak" -delete

    **2. Block version control:**
       # Apache
       <DirectoryMatch "^\\.git">
           Require all denied
       </DirectoryMatch>

       # Nginx
       location ~ /\\.git {
           deny all;
       }

    **3. Disable directory indexing:**
       # Apache
       Options -Indexes

       # Nginx
       autoindex off;

    **4. Add security headers (Apache):**
       Header set X-Frame-Options "DENY"
       Header set X-Content-Type-Options "nosniff"
       Header set Content-Security-Policy "default-src 'self'"
       Header set Strict-Transport-Security "max-age=31536000"

    **5. Update software:**
       apt update && apt upgrade  # Debian/Ubuntu
       yum update                 # CentOS/RHEL

AUTOMATED SCANNING
    ü§ñ CI/CD Integration:
       Nikto kan geautomatiseerd draaien in CI/CD pipeline:

       # GitLab CI
       nikto-scan:
         script:
           - nikto -h https://staging.example.com -o report.html

       ‚Üí Catch vulnerabilities VOOR production deploy

DEFENSE IN DEPTH
    üõ°Ô∏è  Layered security:

    **Layer 1 - Server hardening:**
       ‚úÖ Remove default files/folders
       ‚úÖ Disable directory indexing
       ‚úÖ Update software regelmatig
       ‚úÖ Minimal installed packages

    **Layer 2 - Web Application Firewall:**
       ‚úÖ ModSecurity (Apache/Nginx)
       ‚úÖ Cloudflare WAF
       ‚úÖ AWS WAF
       ‚Üí Block common attack patterns

    **Layer 3 - Security headers:**
       ‚úÖ CSP, HSTS, X-Frame-Options
       ‚úÖ Check: securityheaders.com

    **Layer 4 - Monitoring:**
       ‚úÖ Log analysis (fail2ban)
       ‚úÖ SIEM integration
       ‚úÖ Anomaly detection

LIMITATIONS
    ‚ö†Ô∏è  Wat Nikto NIET doet:
       ‚Ä¢ Geen exploit execution (alleen detectie)
       ‚Ä¢ Geen SQL injection testing (gebruik sqlmap)
       ‚Ä¢ Geen XSS testing (gebruik Burp/ZAP)
       ‚Ä¢ Geen authenticated scanning (alleen public)

    Nikto is RECON tool, niet exploit tool.

LEGAL USE
    ‚úÖ Authorized testing:
       ‚Ä¢ Eigen websites
       ‚Ä¢ Penetration testing contract
       ‚Ä¢ Bug bounty programs (within scope)
       ‚Ä¢ Security audits

    ‚ùå Unauthorized scanning:
       ‚Ä¢ Random websites scannen
       ‚Ä¢ Concurrenten scannen
       ‚Ä¢ Zonder expliciete toestemming

    Straf: Computer Fraud Act violations, civiele claims

GERELATEERDE COMMANDO'S
    nmap (port scanning), sqlmap (SQL injection), wpscan (WordPress)
`.trim()
};
